{"version":3,"sources":["components/NavBar.jsx","api/api.js","components/DynamicTable.jsx","components/HtmlEditor.jsx","components/CreatePost.jsx","components/Canvas.jsx","components/Card.jsx","components/home.jsx","components/Project.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","React","createElement","Navbar","className","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Button","variant","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","url","createProject","_ref","_asyncToGenerator","_callee","data","func","_context","axios","post","concat","_x","_x2","apply","arguments","getTechs","_ref2","_callee2","_context2","get","_x3","getImpactAreas","_ref3","_callee3","_context3","_x4","getTopics","_ref4","_callee4","_context4","_x5","getbasicProjectsInfo","_ref5","_callee5","_context5","_x6","getFilterProjects","_ref6","_callee6","filters","_context6","_x7","_x8","getProjectById","_ref7","_callee7","_context7","_x9","_x10","DynamicTable","HtmlEditor","setTextEditor","_useQuill","useQuill","modules","toolbar","align","list","indent","size","header","quill","quillRef","useEffect","on","current","firstChild","innerHTML","style","width","height","backgroundColor","color","ref","CreatePost","_useState","useState","_useState2","_slicedToArray","show","setShow","handleClose","_useState3","_useState4","status","setStatus","_useState5","_useState6","showChecker","setShowChecker","handleShowChecker","handleCloseChecker","window","location","reload","_useState7","_useState8","showInvalidFormatAlert","setShowInvalidFormatAlert","_useState9","_useState10","projectName","setProjectName","_useState11","_useState12","description","setDescription","_useState13","skill","expLevel","_useState14","_useState15","_useState16","techs","setTechs","_useState17","_useState18","orgName","setOrgName","_useState19","_useState20","logo","setLogo","_useState21","_useState22","impactAreas","setImpactAreas","_useState23","_useState24","topics","setTopics","_useState25","_useState26","contact","setContact","_useState27","_useState28","website","setWebsite","_useState29","_useState30","isEmptyImpactAreas","isEmptyTopics","isEmptyTechs","handleChanges","index","setData","newArr","_toConsumableArray","_getTechsRequest","response","map","_getImpactAreasRequest","_getTopicsRequest","getTopicsRequest","getTechsRequest","getImpactAreasRequest","Form","Group","controlId","Label","Control","placeholder","onChange","e","target","tec","ToggleButton","checked","padding","fontSize","accept","file","files","includes","handleLogoChange","Alert","onClose","dismissible","area","Text","textAlign","onClick","preventDefault","FormData","append","_step","_iterator","_createForOfIteratorHelper","entries","s","n","console","log","f","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","Canvas","myCard","props","Card","Img","src","projectTitle","organizationName","split","Badge","trim","skills","Link","to","Home","ImpactAreas","projects","setProjects","_getProjectsRequest","getProjectsRequest","item","event","impactAreaIds","filter","techIds","topicIds","join","Row","p","org_name","impact_areas","technologies","Project","useParams","project","setProject","_getProjectRequest","getProjectRequest","render","table","tag","dangerouslySetInnerHTML","__html","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.1b60d5cb.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../css/NavBar.css\"\n\nfunction NavBar() {\n  return (\n    <div>\n      <Navbar className=\"color-nav\" bg=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand  className=\"neon\" href=\"/\">{\"<StartJr/>\"}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n              {/* <Nav.Link href=\"#link\">About</Nav.Link> */}\n              <Button variant=\"info\" href=\"/CreatePost\">Post a Job</Button>{\" \"}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import axios from \"axios\"\n\n// export const url = \"http://localhost:4000\"\n// export const url = process.env.REACT_APP_BACKEND_URL \nexport const url = \"https://startjunior-production.up.railway.app\"\n\n//create new project's post\nexport const createProject = async (data,func) => {\n    await axios.post(`${url}/createProject `, data).then(func)\n}\n\n// get skills technologies \nexport const getTechs = async (func) => {\n    await axios.get(`${url}/techs`).then(func)\n}\n\n// // get skill types \n// export const getTypes = async (func) => {\n//     await axios.get(`${url}/types`).then(func)\n// }\n\n// // get skill expLevel \n// export const getExpLevels = async (func) => {\n//     await axios.get(`${url}/expLevels`).then(func)\n// }\n\n//get Impact Areas\nexport const getImpactAreas = async (func) => {\n    await axios.get(`${url}/impactAreas`).then(func)\n} \n\n//get topics\nexport const getTopics = async (func) =>{\n    await axios.get(`${url}/topics`).then(func)\n}\n\n//get basic projects info\nexport const getbasicProjectsInfo = async (func)=>{\n    await axios.get(`${url}/basicprojects`).then(func)\n}\n\n//get basic projects filtering \nexport const getFilterProjects = async (filters,func)=>{\n    await axios.get(`${url}${filters}`).then(func)\n}\n\n//get all project info by id\nexport const getProjectById= async (id,func)=>{\n    await axios.get(`${url}/project/${id}`).then(func)\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { getTechs } from \"../api/api\";\nimport \"../css/DynamicTable.css\"\n\nfunction DynamicTable({ inputFields, techs, types, expLevels, setInputFields }) {\n\n  // const [inputFields, setInputFields] = useState([\n  //   {\n  //     skill: \"\",\n  //     type: \"\",\n  //     expLevel: \"\",\n  //   },\n  // ]);\n\n\n\n  const addInputField = (evnt) => {\n    evnt.preventDefault();\n    // console.log(inputFields)\n    if (inputFields[inputFields.length - 1].skill !== \"\"\n      && inputFields[inputFields.length - 1].type !== \"\"\n      && inputFields[inputFields.length - 1].expLevel !== \"\"\n    ) {\n      setInputFields([\n        ...inputFields,\n        {\n          skill: \"\",\n          type: \"\",\n          expLevel: \"\",\n        },\n      ]);\n    }\n  };\n\n\n  function removeInputFields(evnt) {\n    evnt.preventDefault();\n    // console.log(evnt.target)\n    const { id } = evnt.target\n    const rows = [...inputFields];\n    rows.splice(id, 1);\n    setInputFields(rows);\n  };\n\n\n  const handleChange = (index, evnt) => {\n    console.log(index, evnt)\n    // const { name, value } = evnt.target;\n    const { name, value } = evnt;\n    const list = [...inputFields];\n    list[index][name] = value;\n    setInputFields(list);\n    // console.log(\"LIST:\",list)\n  };\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-8\">\n          {inputFields.map((data, index) => {\n            const { skill, type, expLevel } = data;\n            return (\n              <div className=\"row my-3\" key={index}>\n                <div className=\"col\">\n                  <div className=\"form-group\">\n\n\n                    <Dropdown\n                      value={skill}\n                      name=\"skill\"\n                      onSelect={(evnt) => handleChange(index, { name: \"skill\", value: evnt }) }\n                    >\n                      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-basic\">\n                        { (skill === \"\") ? \"Tech\" : skill}\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu className=\"scrollable-menu\">\n\n                        {techs && techs.map((tech) => (\n                          <Dropdown.Item eventKey={tech.name} >{tech.name}</Dropdown.Item>\n                        ))}\n                      </Dropdown.Menu>\n\n                    </Dropdown>\n\n                    {/* <input\n                      type=\"text\"\n                      onChange={(evnt) => handleChange(index, evnt)}\n                      value={skill}\n                      name=\"skill\"\n                      className=\"form-control\"\n                      placeholder=\"Full Name\"\n                    /> */}\n\n                  </div>\n                </div>\n                <div className=\"col\">\n\n\n                  <Dropdown\n                    onSelect={(evnt) => handleChange(index, { name: \"type\", value: evnt })}\n                  >\n                    <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-basic\">\n                      {(type === \"\") ? \"Type\" : type}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {types && types.map((type) => (\n                        <Dropdown.Item eventKey={type.name} >{type.name}</Dropdown.Item>\n                      ))}\n\n                    </Dropdown.Menu>\n\n                  </Dropdown>\n\n                  {/* <input\n                    type=\"email\"\n                    onChange={(evnt) => handleChange(index, evnt)}\n                    value={emailAddress}\n                    name=\"emailAddress\"\n                    className=\"form-control\"\n                    placeholder=\"Email Address\"\n                  /> */}\n\n\n\n                </div>\n                <div className=\"col\">\n\n                  <Dropdown\n                    onSelect={(evnt) => handleChange(index, { name: \"expLevel\", value: evnt })}\n                  >\n                    <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-basic\">\n                      {(expLevel === \"\") ? \"Exp. Level\" : expLevel}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {expLevels && expLevels.map((expLevel) => (\n                        <Dropdown.Item eventKey={expLevel.name} >{expLevel.name}</Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n\n                  </Dropdown>\n\n\n\n                  {/* <input\n                    type=\"text\"\n                    onChange={(evnt) => handleChange(index, evnt)}\n                    value={salary}\n                    name=\"salary\"\n                    className=\"form-control\"\n                    placeholder=\"Salary\"\n                  /> */}\n\n\n                </div>\n                <div className=\"col\">\n                  {inputFields.length !== 1 ? (\n                    <button\n                      id={index}\n                      className=\"btn btn-outline-danger\"\n                      onClick={(e) => removeInputFields(e)}\n                    >\n                      Remove\n                    </button>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            );\n          })}\n\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <button\n                className=\"btn btn-outline-success \"\n                onClick={addInputField}\n              >\n                Add New\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-sm-4\"></div>\n    </div>\n  );\n}\n\nexport default DynamicTable;\n","import React from \"react\";\nimport { useQuill } from \"react-quilljs\";\nimport \"quill/dist/quill.snow.css\";\n\nfunction HtmlEditor({setTextEditor}) {\n\n \n  const modules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n    [{ align: [] }],\n\n    [{ list: 'ordered'}, { list: 'bullet' }],\n    [{ indent: '-1'}, { indent: '+1' }],\n\n    [{ size: ['small', false, 'large', 'huge'] }],\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n   \n    ],\n  }\n  const { quill, quillRef } = useQuill({modules});\n\n\n\n  React.useEffect(() => {\n    if (quill) {\n      quill.on('text-change', () => {\n        // console.log(quillRef.current.firstChild.innerHTML); // Get text only\n        setTextEditor(quillRef.current.firstChild.innerHTML)\n      });\n    }\n  }, [quill]);\n\n\n\n  return (\n    <div>\n      <div style={{ width: \"100%\", height: \"100%\" , backgroundColor: \"white\" , color : \"black\"}}>\n        <div ref={quillRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default HtmlEditor;\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"../css/CreatePost.css\";\nimport DynamicTable from \"./DynamicTable\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport HtmlEditor from \"./HtmlEditor\";\nimport Modal from 'react-bootstrap/Modal';\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { Alert } from 'react-bootstrap';\nimport {\n  createProject, getTechs,\n  getTypes,\n  getExpLevels,\n  getImpactAreas,\n  getTopics\n} from \"../api/api.js\"\nimport axios from \"axios\"\n\nfunction CreatePost() {\n\n  //modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const [status, setStatus] = useState(false)\n  const [showChecker, setShowChecker] = useState(false);\n  const handleShowChecker = () => setShowChecker(true);\n  const handleCloseChecker = () => {\n    // id created succesfully\n    if (status) {\n      // redirect to home\n      setShowChecker(false);\n      window.location.href = '/';\n    } else {\n      //reload\n      setShowChecker(false);\n      window.location.reload();\n    }\n  }\n\n  //Alert logo handler \n  const [showInvalidFormatAlert, setShowInvalidFormatAlert] = useState(false);\n\n\n  //project name\n  const [projectName, setProjectName] = useState(\"\");\n  //description\n  const [description, setDescription] = useState(\"\");\n  //skills\n  const [inputFields, setInputFields] = useState([\n    {\n      skill: \"\",\n      type: \"\",\n      expLevel: \"\",\n    },\n  ]);\n  //skills/ technologies\n  const [techs, setTechs] = useState()\n  //organization name\n  const [orgName, setOrgName] = useState(\"\");\n  //logo file img/png\n  const [logo, setLogo] = useState(undefined)\n  //impacts Areass\n  const [impactAreas, setImpactAreas] = useState()\n  // Topics\n  const [topics, setTopics] = useState()\n  // contact\n  const [contact, setContact] = useState(\"\")\n  // website\n  const [website, setWebsite] = useState(\"\")\n  //repository\n  const [repo, setRepo] = useState(\"\")\n\n\n  const isValidUrl = urlString => {\n    var inputElement = document.createElement('input');\n    inputElement.type = 'url';\n    inputElement.value = urlString;\n\n    if (!inputElement.checkValidity()) {\n      return false;\n    } else {\n\n      return true;\n    }\n  }\n\n  const isValidEmail = str => {\n    // Regular expression to check if string is email\n    const regexExp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\n    return regexExp.test(str);\n  }\n\n  const isEmptySkill = () => {\n    console.log(inputFields)\n    return !(inputFields[0].skill.length && inputFields[0].type.length && inputFields[0].expLevel.length)\n  }\n\n  const isEmptyImpactAreas = () => {\n    for (let i = 0; i < impactAreas.length; i++) {\n      if (impactAreas[i].value) {\n        return false\n      }\n    }\n    return true\n  }\n\n  const isEmptyTopics = () => {\n    for (let i = 0; i < topics.length; i++) {\n      if (topics[i].value) {\n        return false\n      }\n    }\n    return true\n  }\n\n  const isEmptyTechs = () => {\n    for (let i = 0; i < techs.length; i++) {\n      if (techs[i].value) {\n        return false\n      }\n    }\n    return true\n  }\n\n\n\n\n\n  const handleChanges = (index, setData, data) => {\n    let newArr = [...data];\n    newArr[index].value = !newArr[index].value;\n    setData(newArr);\n  };\n\n  //GET REQUESTS\n\n  useEffect(() => {\n\n\n    async function getTechsRequest() {\n      getTechs((response) => setTechs(\n        response[\"data\"].map(data => ({\n          id: data.id,\n          name: data.name,\n          value: false\n        }))\n      ))\n    }\n    // async function getTechsRequest() {\n    //   getTechs((response) => setTechs(response.data))\n    // }\n    // async function getTypesRequest() {\n    //   getTypes((response) => setTypes(response.data))\n    // }\n    // async function getExpLevelsRequest() {\n    //   getExpLevels((response) => setExpLevels(response.data))\n    // }\n\n    async function getImpactAreasRequest() {\n      getImpactAreas((response) => setImpactAreas(\n        response[\"data\"].map(data => ({\n          id: data.id,\n          name: data.name,\n          value: false\n        }))\n      ))\n    }\n\n    async function getTopicsRequest() {\n      getTopics((response => setTopics(\n        response[\"data\"].map(data => ({\n          id: data.id,\n          name: data.name,\n          value: false\n        }))\n      )))\n    }\n\n    getTopicsRequest()\n    getTechsRequest()\n    getImpactAreasRequest()\n  }, [])\n\n\n  const handleLogoChange = (e) => {\n    const file = e.target.files[0];\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n\n    if (file && allowedTypes.includes(file.type)) {\n      setLogo(file);\n      setShowInvalidFormatAlert(false); // Hide the alert if a valid file is selected\n    } else {\n      // setLogo(null);\n      setShowInvalidFormatAlert(true); // Show the alert for invalid file format\n    }\n  }\n\n\n\n  //submit form to create a new Project\n  const submitHandlr = (e) => {\n    e.preventDefault();\n    //check if any field is empty\n    if (projectName.length && description.length && !isEmptyTechs() &&\n       orgName.length && !isEmptyImpactAreas() && !isEmptyTopics() && contact.length\n      && website.length && (logo != undefined)) {\n\n    \n      const data = new FormData()\n\n     \n      //adding topics\n      topics.map((obj) => {\n        if (obj.value) { data.append(\"topics\", obj.id) }\n      })\n\n      //adding impactAreas\n      impactAreas.map((obj) => {\n        if (obj.value) { data.append(\"impactAreas\", obj.id) }\n      })\n\n      //adding Techs\n      techs.map((obj) => {\n        if (obj.value) { data.append(\"techs\", obj.id) }\n      })\n\n\n      data.append(\"projectName\", projectName)\n      data.append(\"description\", description)\n      data.append(\"orgName\", orgName)\n      data.append(\"logo\", logo)\n      data.append(\"contact\", contact)\n      data.append(\"website\", website)\n      // data.append(\"repo\", repo)\n\n      for (var [key, value] of data.entries()) {\n        console.log(key, value);\n      }\n\n       //send data to server\n       createProject(data, (response) => {\n        if (response.status === 200) {\n          setStatus(true)\n          handleShowChecker()\n        } else {\n          setStatus(false)\n          handleShowChecker()\n        }\n      });\n\n    } else {\n      handleShow()\n    }\n  }\n\n\n\n  // console.log(description)\n\n  return (\n    <div>\n\n      <NavBar />\n      <Form className=\"myForm\" >\n        {/* Project Name */}\n        <Form.Group className=\"mb-3\" controlId=\"formProject\">\n          <Form.Label> Position </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter the position\" onChange={(e) => setProjectName(e.target.value)} />\n        </Form.Group>\n        {/* Description */}\n        <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n          <Form.Label>Description</Form.Label>\n          <HtmlEditor setTextEditor={setDescription} />\n        </Form.Group>\n        {/* Skills */}\n\n        <Form.Group className=\"mb-3\" controlId=\"formSkills\">\n          <Form.Label>Skills</Form.Label> <br />\n          {techs && techs.map((tec, index) => (\n            <ToggleButton\n              className=\"btn-space\"\n              id={index + tec.name}\n              type=\"checkbox\"\n              variant=\"outline-info\"\n              checked={techs[index].value}\n              value=\"1\"\n              onChange={(e) => handleChanges(index, setTechs, techs)}\n              style={{ padding: '0.2rem 0.5rem', fontSize: '0.8rem' }}\n            >\n              {tec.name}\n            </ToggleButton>\n          ))}\n        </Form.Group>\n\n\n        {/* Organization Name */}\n        <Form.Group className=\"mb-3\" controlId=\"formOrgName\">\n          <Form.Label>Organization Name </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter the organization name\" \n          onChange={(e) => setOrgName(e.target.value)} />\n        </Form.Group>\n\n\n        {/* Logo */}\n        <Form.Group className=\"mb-3\" controlId=\"formLogo\">\n          <Form.Label>Logo</Form.Label>\n          <Form.Control type=\"file\" accept=\".jpg, .jpeg, .png\" onChange={(e) => handleLogoChange(e)} />\n        </Form.Group>\n\n         {/* Invalid Format Alert */}\n         {showInvalidFormatAlert && (\n          <Alert variant=\"danger\" onClose={() => setShowInvalidFormatAlert(false)} dismissible>\n            Invalid file format. Please select a JPG or PNG file.\n          </Alert>\n        )}\n\n        {/* Impact Area */}\n        <Form.Group className=\"mb-3\" controlId=\"formImpactArea\">\n          <Form.Label>Impact Areas</Form.Label> <br />\n\n          {impactAreas && impactAreas.map((area, index) => (\n            <ToggleButton\n              className=\"btn-space\"\n              id={index + area.name}\n              type=\"checkbox\"\n              variant=\"outline-info\"\n              checked={impactAreas[index].value}\n              value=\"1\"\n              onChange={(e) => handleChanges(index, setImpactAreas, impactAreas)}\n              style={{ padding: '0.2rem 0.5rem', fontSize: '0.8rem' }}\n            >\n              {area.name}\n            </ToggleButton>\n          ))}\n        </Form.Group>\n\n        {/* Topics */}\n        <Form.Group className=\"mb-3\" controlId=\"formTopics\">\n          <Form.Label>Topics</Form.Label> <br />\n\n          {topics && topics.map((area, index) => (\n            <ToggleButton\n              className=\"btn-space \"\n              id={index + area.name}\n              type=\"checkbox\"\n              variant=\"outline-info\"\n              checked={topics[index].value}\n              value=\"1\"\n              onChange={(e) => handleChanges(index, setTopics, topics)}\n              style={{ padding: '0.2rem 0.5rem', fontSize: '0.8rem' }}\n            >\n              {area.name}\n            </ToggleButton>\n          ))}\n        </Form.Group>\n\n        {/* Contact */}\n        <Form.Group className=\"mb-3\" controlId=\"formContact\">\n          <Form.Label>Contact</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter email or link\" onChange={(e) => setContact(e.target.value)} />\n          <Form.Text className=\"text-muted\">\n            Email or link to contact you\n          </Form.Text>\n        </Form.Group>\n\n        {/* Website */}\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Website</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter your website's link\" \n          onChange={(e) => setWebsite(e.target.value)} />\n        </Form.Group>\n\n        <div style={{ textAlign: \"center\", padding: \"1%\" }} >\n          <Button onClick={submitHandlr} variant=\"outline-info\" type=\"submit\" className=\"btn-lg\">\n            Submit\n          </Button>\n        </div>\n      </Form>\n\n      {/* Modal succesfully created */}\n      <Modal\n        show={showChecker}\n        onHide={handleCloseChecker}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {status ? \"Your project has been successfully created.\" :\n            \"Your project was not created successfully.\"}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseChecker}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* modal pop up*/}\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Hey!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Don't forget to complete the fields:\n          <ul>\n            {!projectName.length && <li>Project Name</li>}\n            {!description.length && <li>Description</li>}\n            {techs && isEmptyTechs() && <li>Techs</li>}\n            {!orgName.length && <li>Organization Name</li>}\n            {impactAreas && isEmptyImpactAreas() && <li>Impact Area</li>}\n            {topics && isEmptyTopics() && <li>Topics</li>}\n            {!contact.length && <li>Contact</li>}\n            {!website.length && <li>Website</li>}\n            {logo === undefined && <li>Logo</li>}\n          </ul>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n    </div>\n  );\n}\n\nexport default CreatePost;\n","\n// import { useRef, useEffect } from \"react\";\n\n// function canvas() {\n//   // Initialising the canvas\n//   var canvas = document.querySelector(\"canvas\"),\n//     ctx = canvas.getContext(\"2d\");\n\n\n//   // Setting the width and height of the canvas\n//   canvas.width = window.innerWidth;\n//   canvas.height = window.innerHeight;\n\n//   // Setting up the letters\n//   var letters =\n//     \"ABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZ\";\n//   letters = letters.split(\"\");\n\n//   // Setting up the columns\n//   var fontSize = 10,\n//     columns = canvas.width / fontSize;\n\n//   // Setting up the drops\n//   var drops = [];\n//   for (var i = 0; i < columns; i++) {\n//     drops[i] = 1;\n//   }\n\n//   // Setting up the draw function\n//   function draw() {\n//     ctx.fillStyle = \"rgba(0, 0, 0, .1)\";\n//     ctx.fillRect(0, 0, canvas.width, canvas.height);\n//     for (var i = 0; i < drops.length; i++) {\n//       var text = letters[Math.floor(Math.random() * letters.length)];\n//       //   ctx.fillStyle = \"#0f0\";\n//       ctx.fillStyle = \"#0ff\";\n//       ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n//       drops[i]++;\n//       if (drops[i] * fontSize > canvas.height && Math.random() > 0.95) {\n//         drops[i] = 0;\n//       }\n//     }\n//   }\n\n//   // Loop the animation\n//   setInterval(draw, 60);\n// }\n\n\n// export default canvas\n\nimport React from 'react';\nimport { useRef, useEffect } from \"react\";\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Setting the width and height of the canvas\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Setting up the letters\n    var letters =\n      \"ABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZ\";\n    letters = letters.split(\"\");\n\n    // Setting up the columns\n    var fontSize = 10,\n      columns = canvas.width / fontSize;\n\n    // Setting up the drops\n    var drops = [];\n    for (var i = 0; i < columns; i++) {\n      drops[i] = 1;\n    }\n\n    // Setting up the draw function\n    function draw() {\n      ctx.fillStyle = \"rgba(0, 0, 0, .1)\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      for (var i = 0; i < drops.length; i++) {\n        var text = letters[Math.floor(Math.random() * letters.length)];\n        //   ctx.fillStyle = \"#0f0\";\n        ctx.fillStyle = \"#0ff\";\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n        drops[i]++;\n        if (drops[i] * fontSize > canvas.height && Math.random() > 0.95) {\n          drops[i] = 0;\n        }\n      }\n    }\n\n    // Loop the animation\n    const interval = setInterval(draw, 60);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return <canvas ref={canvasRef} />;\n}\n\nexport default Canvas;\n\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Badge } from 'react-bootstrap';\nimport \"../css/Card.css\"\nimport { Link } from 'react-router-dom';\n\nfunction myCard(props) {\n\n\n  // let logo=\"https://wwwhatsnew.com/wp-content/uploads/2022/02/linux-seguridad.jpeg\"\n\n  return (\n    <Card className=\"myCard\" style={{ width: '18rem' }}>\n      <Card.Body>\n        <Card.Img variant=\"top\" src={props.logo} />\n        <Card.Title>{props.projectTitle}</Card.Title>\n        <Card.Text>\n          {/* <img  className=\"logo\" src={props.logo} alt=\"Logo\" /> */}\n          <h6> {props.organizationName} </h6>\n          {/* impact areas */}\n          <span>\n            {props.impactAreas.split(',').map((area) => (\n              // <button key={area}>{area.trim()}</button>\n              <Badge key={area} bg=\"primary\"> {area.trim()}</Badge>\n            ))}\n          </span>\n          <br />\n          {/* skills */}\n          <span>\n            {props.skills.split(',').map((skill) => (\n              <Badge key={skill} bg=\"info\"> {skill.trim()}</Badge>\n              // <button key={skill}>{skill.trim()}</button>\n            ))}\n          </span>\n          <br />\n        </Card.Text>\n\n        <Link to={`/project/${props.id}`}>\n          <Button variant=\"primary\">Details</Button>\n        </Link>\n\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default myCard;","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Carusel from \"./Carusel\";\nimport Canvas from \"./Canvas\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport Card from \"./Card\";\nimport Row from \"react-bootstrap/Row\";\nimport CreatePost from \"./CreatePost\";\nimport \"../css/Home.css\"\n\n\nimport {\n  url,\n  getImpactAreas,\n  getTechs,\n  getTopics,\n  getbasicProjectsInfo,\n  getFilterProjects\n} from \"../api/api.js\"\n\nfunction Home() {\n\n  //FILTERS\n  const [ImpactAreas, setImpactAreas] = useState();\n  const [techs, setTechs] = useState()\n  const [topics, setTopics] = useState()\n  const [projects, setProjects] = useState()\n\n  //CARDS\n\n  const handleSubmitFilters = (event) => {\n    event.preventDefault();\n\n    const impactAreaIds = ImpactAreas.filter(data => data.value).map(data => data.id);\n    const techIds = techs.filter(data => data.value).map(data => data.id);\n    const topicIds = topics.filter(data => data.value).map(data => data.id);\n\n    // Construct the base URL for the fetch request\n    let url = \"\";\n\n    // Add the selected impact areas to the URL\n    if (impactAreaIds.length > 0) {\n      url += `impactAreas=${impactAreaIds.join(',')}&`;\n    }\n\n    // Add the selected technologies to the URL\n    if (techIds.length > 0) {\n      url += `techs=${techIds.join(',')}&`;\n    }\n\n    // Add the selected topics to the URL\n    if (topicIds.length > 0) {\n      url += `topics=${topicIds.join(',')}&`;\n    }\n\n\n    if (url.length === 0) {\n      return;\n    }\n\n    //add at the bginning \n    url = '/filterprojects?' + url\n    // Remove the trailing '&' from the URL\n    url = url.slice(0, -1);\n\n    console.log(\"final url\", url)\n\n    getFilterProjects(url ,response => setProjects(response[\"data\"]))\n\n\n  };\n\n\n\n  const handleImpactAreas = (index) => {\n    let newArr = [...ImpactAreas];\n    newArr[index].value = !newArr[index].value;\n    setImpactAreas(newArr);\n  };\n\n  const handleChanges = (index, setData, data) => {\n    let newArr = [...data];\n    newArr[index].value = !newArr[index].value;\n    setData(newArr);\n  };\n\n  //REQUESTS\n  useEffect(() => {\n    async function getImpactAreasRequest() {\n      getImpactAreas((response) => setImpactAreas(\n        response[\"data\"].map(data => ({\n          id: data.id,\n          name: data.name,\n          value: false\n        }))\n      ))\n    }\n    async function getTechsRequest() {\n      getTechs((response => setTechs(\n        response[\"data\"].map(data => ({\n          id: data.id,\n          name: data.name,\n          value: false\n        }))\n      )))\n    }\n    async function getTopicsRequest() {\n      getTopics((response => setTopics(\n        response[\"data\"].map(data => ({\n          id: data.id,\n          name: data.name,\n          value: false\n        }))\n      )))\n    }\n    async function getProjectsRequest() {\n      getbasicProjectsInfo(response => setProjects(response[\"data\"]))\n    }\n\n    getImpactAreasRequest()\n    getTechsRequest()\n    getTopicsRequest()\n    getProjectsRequest()\n\n  }, [])\n\n  return (\n    <div>\n     \n      {/* <Canvas/> */}\n      <NavBar />\n\n      {/* Impact Areas */}\n      <Container className=\"filters\">\n        { ImpactAreas && ImpactAreas.map((area, index) => (\n          <ToggleButton\n            className=\"btn-space\"\n            id={index + area.name}\n            type=\"checkbox\"\n            variant=\"outline-info\"\n            checked={ImpactAreas[index].value}\n            value=\"1\"\n            onChange={(e) => handleChanges(index, setImpactAreas, ImpactAreas)}\n          >\n            {area.name}\n          </ToggleButton>\n        ))}\n      </Container>\n\n\n      <Container className=\"filters\">\n\n        {/* topics */}\n        {topics && topics.map((item, index) => (\n          <ToggleButton\n            className=\"btn-sm btn-techs\"\n            id={index + item.name}\n            type=\"checkbox\"\n            variant=\"outline-info\"\n            checked={topics[index].value}\n            value=\"1\"\n            onChange={(e) => handleChanges(index, setTopics, topics)}\n          >\n            {item.name}\n          </ToggleButton>\n        ))}\n\n\n        <br></br><br></br>\n\n        {/* Technologies */}\n        {techs && techs.map((item, index) => (\n          <ToggleButton\n            className=\"btn-sm btn-techs\"\n            id={index + item.name}\n            type=\"checkbox\"\n            variant=\"outline-info\"\n            checked={techs[index].value}\n            value=\"1\"\n            onChange={(e) => handleChanges(index, setTechs, techs)}\n          >\n            {item.name}\n          </ToggleButton>\n        ))}\n\n      </Container>\n\n      <Container className=\"filters\">\n        <Button variant=\"info\" onClick={handleSubmitFilters}>Apply Filters</Button>\n      </Container>\n\n      {/* CARDS */}\n\n      <Container className=\"filters-cards\">\n        <Row>\n\n          {projects && projects.map((p) => (\n\n            <Card\n              id={p.id}\n              key={p.id}\n              // logo={`${url}/${p.logo}`}\n              logo={`https://res.cloudinary.com/dnti3vb59/image/upload/v1/${p.logo}`}\n              projectTitle={p.name}\n              organizationName={p.org_name}\n              impactAreas={p.impact_areas}\n              skills={p.technologies}\n            />\n\n          ))}\n\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport \"../css/Project.css\"\nimport { useParams } from \"react-router-dom\";\nimport { getProjectById, url } from \"../api/api.js\"\nimport { Button, Badge } from 'react-bootstrap';\n\n\nfunction Project() {\n\n  const { id } = useParams();\n  const [project, setProject] = useState()\n\n\n  //REQUESTS\n  useEffect(() => {\n\n    async function getProjectRequest() {\n      getProjectById(id, response => setProject(response[\"data\"][0]))\n    }\n    getProjectRequest()\n  }, [])\n\n\n  // const renderSkills = () => {\n  //   const techs = project.technology_names.split(',')\n  //   const types = project.type_names.split(',')\n  //   const exp = project.exp_names.split(',')\n\n  //   return (\n  //     <div>\n  //       { techs.map((tag, index) => (\n  //         <div key={index}>\n  //           <button >{tag.trim()}</button>\n  //           <button >{types[index].trim()}</button>\n  //           <button >{exp[index].trim()}</button>\n  //           <br />\n  //         </div>\n  //       ))}\n  //     </div>\n  //   )\n  // };\n\n  const render = (table) => {\n    const data = project[table].split(',')\n\n    return (\n      <div>\n        {data.map((tag, index) => (\n          <Button variant=\"info\" className=\"m-1\">\n            {tag.trim()}\n          </Button>\n        ))}\n      </div>\n    )\n  };\n\n  if (!project) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <NavBar />\n\n      <Card className=\"myProject\">\n        {/* logo  */}\n        <Card.Img\n          className=\"mylogo mx-auto\"\n          variant=\"top\"\n          // src={`${url}/${project.logo}`}\n          src={`https://res.cloudinary.com/dnti3vb59/image/upload/v1/${project.logo}`}\n        />\n\n        <Card.Body>\n          <Card.Link href={project.contact} target=\"_blank\">Contact</Card.Link>\n          <Card.Link href={project.website} target=\"_blank\">Website</Card.Link>\n        </Card.Body>\n        <Card.Body>\n          {/* project title */}\n          <Card.Title>{project.name}</Card.Title>\n          {/* organization namme */}\n          <Card.Title>{project.org_name}</Card.Title>\n          {/* Description */}\n          <Card.Text>\n            <div dangerouslySetInnerHTML={{ __html: project.description }} />\n          </Card.Text>\n        </Card.Body>\n\n        {/* skills */}\n        <Card.Body>\n          <Card.Title>Skills</Card.Title>\n          {project && render(\"technologies\")}\n        </Card.Body>\n\n        {/* Impact Areas */}\n        <Card.Body>\n          <Card.Title>Impact Areas</Card.Title>\n          {project && render(\"impact_areas\")}\n        </Card.Body>\n\n        {/* topics */}\n        <Card.Body>\n          <Card.Title>Topics</Card.Title>\n          {project && render(\"topics\")}\n        </Card.Body>\n\n\n      </Card>\n\n    </div>\n  );\n}\n\n\n\n\nexport default Project","\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CreatePost from \"./components/CreatePost\";\nimport Home from \"./components/home\";\nimport Project from \"./components/Project\";\n\nfunction App() {\n  const [backendData, setBackendData] = useState([{}]);\n\n  // useEffect(() => {\n  //   fetch(\"/api\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setBackendData(data);\n  //     });\n  // }, []);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />}>  </Route>\n        <Route path=\"/CreatePost\" element={<CreatePost />}>  </Route>\n        <Route path=\"/project/:id\" element={<Project />}>  </Route>\n        \n      </Routes>\n    </BrowserRouter>\n  );\n}\n\n\n   // <div>\n    //   {typeof backendData.users === \"undefined\" ? (\n    //     <p>Loading..</p>\n    //   ) : (\n    //     backendData.users.map((user, i) => {\n    //       return <p key={i}>{user}</p>;\n    //     })\n    //   )}\n    // </div>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}